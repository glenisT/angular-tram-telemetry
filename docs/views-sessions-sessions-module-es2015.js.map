{"version":3,"sources":["./node_modules/ngx-custom-validators/__ivy_ngcc__/fesm2015/ngx-custom-validators.js","./src/app/views/sessions/error/error.component.ts","./src/app/views/sessions/error/error.component.html","./src/app/views/sessions/forgot-password/forgot-password.component.ts","./src/app/views/sessions/forgot-password/forgot-password.component.html","./src/app/views/sessions/lockscreen/lockscreen.component.ts","./src/app/views/sessions/lockscreen/lockscreen.component.html","./src/app/views/sessions/not-found/not-found.component.ts","./src/app/views/sessions/not-found/not-found.component.html","./src/app/views/sessions/sessions.module.ts","./src/app/views/sessions/sessions.routing.ts","./src/app/views/sessions/signin/signin.component.ts","./src/app/views/sessions/signin/signin.component.html","./src/app/views/sessions/signup/signup.component.ts","./src/app/views/sessions/signup/signup.component.html"],"names":[],"mappings":"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;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,oCAAoC,MAAM,eAAe;AACzD;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,+DAAwB,EAAE,4JAA4J,WAAW,aAAa,gEAAyB,4BAA4B,kEAA2B,GAAG;AAC7T,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA,kBAAkB,yDAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,YAAY;AACZ;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,6JAA6J,gEAAyB,qBAAqB;;AAE1P;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,qCAAqC,OAAO,eAAe;AAC3D;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH,8BAA8B,+DAAwB,EAAE,iKAAiK,aAAa,aAAa,gEAAyB,+BAA+B,kEAA2B,GAAG;AACzU,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,oCAAoC,MAAM,eAAe;AACzD;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,yBAAyB,+DAAwB,EAAE,yJAAyJ,WAAW,aAAa,gEAAyB,yBAAyB,kEAA2B,GAAG;AACpT,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,0DAAW,wBAAwB,sDAAO;AACjF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,kEAAkE,WAAW,2CAA2C,EAAE,IAAI,WAAW,sCAAsC,EAAE;AACjL;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,uKAAuK,qBAAqB,aAAa,gEAAyB,wBAAwB,kEAA2B,GAAG;AAC1U,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,qCAAqC,OAAO,eAAe;AAC3D;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,+DAAwB,EAAE,uJAAuJ,aAAa,aAAa,gEAAyB,mBAAmB,kEAA2B,GAAG;AACzS,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,0DAAW,wBAAwB,sDAAO;AACjF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,8BAA8B;AACjE;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,kEAAkE,WAAW,2CAA2C,EAAE,IAAI,WAAW,sCAAsC,EAAE;AACjL;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,uKAAuK,qBAAqB,aAAa,gEAAyB,wBAAwB,kEAA2B,GAAG;AAC1U,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,qCAAqC,OAAO,eAAe;AAC3D;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,+DAAwB,EAAE,uJAAuJ,aAAa,aAAa,gEAAyB,mBAAmB,kEAA2B,GAAG;AACzS,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc,yDAAyD;AAC5H;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,2BAA2B,+DAAwB,EAAE,mLAAmL,2BAA2B,aAAa,gEAAyB,6BAA6B;AACtU,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,mCAAmC,YAAY,aAAa;AAC5D;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,yBAAyB,+DAAwB,EAAE,2KAA2K,uBAAuB,aAAa,gEAAyB,yBAAyB,kEAA2B,GAAG;AAClV,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA,kBAAkB,yDAAU;AAC5B;AACA;AACA;AACA,2BAA2B,IAAI,OAAO,EAAE,mCAAmC;AAC3E;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,+DAAwB,EAAE,qKAAqK,gEAAyB,uBAAuB;;AAEtQ;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe,eAAe;AAC/D;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,yBAAyB,+DAAwB,EAAE,2KAA2K,uBAAuB,aAAa,gEAAyB,wBAAwB,kEAA2B,GAAG;AACjV,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,sEAAsE,eAAe,eAAe;AACpG;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,0CAA0C;AAChH,4BAA4B,+DAAwB,EAAE,uLAAuL,6BAA6B,aAAa,gEAAyB,4BAA4B,kEAA2B,GAAG;AAC1W,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA,wDAAwD,SAAS,eAAe;AAChF;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,+JAA+J,iBAAiB,aAAa,gEAAyB,qBAAqB,kEAA2B,GAAG;AACzT,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA,kBAAkB,yDAAU;AAC5B;AACA;AACA;AACA;AACA,mFAAmF,IAAI,EAAE,EAAE,iCAAiC,IAAI,EAAE,EAAE,sCAAsC,IAAI,EAAE,EAAE,gDAAgD,IAAI,oBAAoB,EAAE,oLAAoL,GAAG,YAAY,IAAI,qCAAqC;AACxe;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,oBAAoB,+DAAwB,EAAE,yJAAyJ,gEAAyB,oBAAoB;;AAEpP;AACA,oBAAoB,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,GAAG;AACxE,oBAAoB,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,EAAE,UAAU,GAAG;AAC9E,oBAAoB,EAAE,UAAU,EAAE,WAAW,EAAE,gBAAgB,EAAE,UAAU,GAAG;AAC9E,sBAAsB,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACzE;AACA;AACA;AACA,sBAAsB,yDAAU;AAChC;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;;AAEA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,2JAA2J,eAAe,aAAa,gEAAyB,oBAAoB,kEAA2B,GAAG;AACjT,wDAAU;AACV,IAAI,2DAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8DAAuB,EAAE,0BAA0B;AAC5E,yBAAyB,8DAAuB,EAAE,iDAAiD,uCAAuC,EAAE,EAAE;AAC9I,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,UAAU;AACf,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDA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","file":"views-sessions-sessions-module-es2015.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { forwardRef, Input, Directive, NgModule } from '@angular/core';\nimport { Validators, NG_VALIDATORS, FormControl, NgModel } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nfunction isDate(obj) {\n    try {\n        const date = new Date(obj);\n        return !isNaN(date.getTime());\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction parseDate(obj) {\n    try {\n        // Moment.js\n        if (obj._d instanceof Date) {\n            const d = obj._d;\n            const month = +d.getMonth() + 1;\n            const day = +d.getDate();\n            return `${d.getFullYear()}-${formatDayOrMonth(month)}-${formatDayOrMonth(day)}`;\n        }\n        // NgbDateStruct\n        if (typeof obj === 'object' && obj.year != null && obj.month != null && obj.day != null) {\n            const month = +obj.month;\n            const day = +obj.day;\n            return `${obj.year}-${formatDayOrMonth(month)}-${formatDayOrMonth(day)}`;\n        }\n    }\n    catch (e) { }\n    return obj;\n}\nfunction formatDayOrMonth(month) {\n    return month < 10 ? `0${month}` : month;\n}\n\nconst arrayLength = (value) => {\n    return (control) => {\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const obj = control.value;\n        return Array.isArray(obj) && obj.length >= +value ? null : { arrayLength: { minLength: value } };\n    };\n};\n\nconst ARRAY_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => ArrayLengthValidator),\n    multi: true\n};\nlet ArrayLengthValidator = class ArrayLengthValidator {\n    ngOnInit() {\n        this.validator = arrayLength(this.arrayLength);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'arrayLength') {\n                this.validator = arrayLength(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nArrayLengthValidator.ɵfac = function ArrayLengthValidator_Factory(t) { return new (t || ArrayLengthValidator)(); };\nArrayLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ArrayLengthValidator, selectors: [[\"\", \"arrayLength\", \"\", \"formControlName\", \"\"], [\"\", \"arrayLength\", \"\", \"formControl\", \"\"], [\"\", \"arrayLength\", \"\", \"ngModel\", \"\"]], inputs: { arrayLength: \"arrayLength\" }, features: [ɵngcc0.ɵɵProvidersFeature([ARRAY_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], ArrayLengthValidator.prototype, \"arrayLength\", void 0);\n\nconst base64 = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    return /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i.test(v) ? null : { base64: true };\n};\n\nconst BASE64_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => Base64Validator),\n    multi: true\n};\nlet Base64Validator = class Base64Validator {\n    validate(c) {\n        return base64(c);\n    }\n};\nBase64Validator.ɵfac = function Base64Validator_Factory(t) { return new (t || Base64Validator)(); };\nBase64Validator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Base64Validator, selectors: [[\"\", \"base64\", \"\", \"formControlName\", \"\"], [\"\", \"base64\", \"\", \"formControl\", \"\"], [\"\", \"base64\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([BASE64_VALIDATOR])] });\n\nconst creditCard = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    const sanitized = v.replace(/[^0-9]+/g, '');\n    // problem with chrome\n    /* tslint:disable */\n    if (!(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|(?:9792)\\d{12})$/.test(sanitized))) {\n        return { creditCard: true };\n    }\n    /* tslint:enable */\n    let sum = 0;\n    let digit;\n    let tmpNum;\n    let shouldDouble;\n    for (let i = sanitized.length - 1; i >= 0; i--) {\n        digit = sanitized.substring(i, (i + 1));\n        tmpNum = parseInt(digit, 10);\n        if (shouldDouble) {\n            tmpNum *= 2;\n            if (tmpNum >= 10) {\n                sum += ((tmpNum % 10) + 1);\n            }\n            else {\n                sum += tmpNum;\n            }\n        }\n        else {\n            sum += tmpNum;\n        }\n        shouldDouble = !shouldDouble;\n    }\n    if (Boolean((sum % 10) === 0 ? sanitized : false)) {\n        return null;\n    }\n    return { creditCard: true };\n};\n\nconst CREDIT_CARD_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CreditCardValidator),\n    multi: true\n};\nlet CreditCardValidator = class CreditCardValidator {\n    validate(c) {\n        return creditCard(c);\n    }\n};\nCreditCardValidator.ɵfac = function CreditCardValidator_Factory(t) { return new (t || CreditCardValidator)(); };\nCreditCardValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CreditCardValidator, selectors: [[\"\", \"creditCard\", \"\", \"formControlName\", \"\"], [\"\", \"creditCard\", \"\", \"formControl\", \"\"], [\"\", \"creditCard\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([CREDIT_CARD_VALIDATOR])] });\n\nconst dateISO = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    return /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(v) ? null : { dateISO: true };\n};\n\nconst DATE_ISO_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => DateISOValidator),\n    multi: true\n};\nlet DateISOValidator = class DateISOValidator {\n    validate(c) {\n        return dateISO(c);\n    }\n};\nDateISOValidator.ɵfac = function DateISOValidator_Factory(t) { return new (t || DateISOValidator)(); };\nDateISOValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DateISOValidator, selectors: [[\"\", \"dateISO\", \"\", \"formControlName\", \"\"], [\"\", \"dateISO\", \"\", \"formControl\", \"\"], [\"\", \"dateISO\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([DATE_ISO_VALIDATOR])] });\n\nconst date = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    let v = control.value;\n    v = parseDate(v);\n    return isDate(v) ? null : { date: true };\n};\n\nconst DATE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => DateValidator),\n    multi: true\n};\nlet DateValidator = class DateValidator {\n    validate(c) {\n        return date(c);\n    }\n};\nDateValidator.ɵfac = function DateValidator_Factory(t) { return new (t || DateValidator)(); };\nDateValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DateValidator, selectors: [[\"\", \"date\", \"\", \"formControlName\", \"\"], [\"\", \"date\", \"\", \"formControl\", \"\"], [\"\", \"date\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([DATE_VALIDATOR])] });\n\nconst digits = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    return /^\\d+$/.test(v) ? null : { digits: true };\n};\n\nconst DIGITS_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => DigitsValidator),\n    multi: true\n};\nlet DigitsValidator = class DigitsValidator {\n    validate(c) {\n        return digits(c);\n    }\n};\nDigitsValidator.ɵfac = function DigitsValidator_Factory(t) { return new (t || DigitsValidator)(); };\nDigitsValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DigitsValidator, selectors: [[\"\", \"digits\", \"\", \"formControlName\", \"\"], [\"\", \"digits\", \"\", \"formControl\", \"\"], [\"\", \"digits\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([DIGITS_VALIDATOR])] });\n\nconst email = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    /* tslint:disable */\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) ? null : { 'email': true };\n    /* tslint:enable */\n};\n\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\nlet EmailValidator = class EmailValidator {\n    validate(c) {\n        return email(c);\n    }\n};\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"ngvemail\", \"\", \"formControlName\", \"\"], [\"\", \"ngvemail\", \"\", \"formControl\", \"\"], [\"\", \"ngvemail\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\n\nconst equalTo = (equalControl) => {\n    let subscribe = false;\n    return (control) => {\n        if (!subscribe) {\n            subscribe = true;\n            equalControl.valueChanges.subscribe(() => {\n                control.updateValueAndValidity();\n            });\n        }\n        const v = control.value;\n        return equalControl.value === v ? null : { equalTo: { control: equalControl, value: equalControl.value } };\n    };\n};\n\nconst EQUAL_TO_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EqualToValidator),\n    multi: true\n};\nlet EqualToValidator = class EqualToValidator {\n    ngOnInit() {\n        this.validator = equalTo(this.equalTo);\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n};\nEqualToValidator.ɵfac = function EqualToValidator_Factory(t) { return new (t || EqualToValidator)(); };\nEqualToValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EqualToValidator, selectors: [[\"\", \"equalTo\", \"\", \"formControlName\", \"\"], [\"\", \"equalTo\", \"\", \"formControl\", \"\"], [\"\", \"equalTo\", \"\", \"ngModel\", \"\"]], inputs: { equalTo: \"equalTo\" }, features: [ɵngcc0.ɵɵProvidersFeature([EQUAL_TO_VALIDATOR])] });\n__decorate([\n    Input()\n], EqualToValidator.prototype, \"equalTo\", void 0);\n\nconst equal = (val) => {\n    return (control) => {\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = control.value;\n        return val === v ? null : { equal: { value: val } };\n    };\n};\n\nconst EQUAL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EqualValidator),\n    multi: true\n};\nlet EqualValidator = class EqualValidator {\n    ngOnInit() {\n        this.validator = equal(this.equal);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'equal') {\n                this.validator = equal(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nEqualValidator.ɵfac = function EqualValidator_Factory(t) { return new (t || EqualValidator)(); };\nEqualValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EqualValidator, selectors: [[\"\", \"equal\", \"\", \"formControlName\", \"\"], [\"\", \"equal\", \"\", \"formControl\", \"\"], [\"\", \"equal\", \"\", \"ngModel\", \"\"]], inputs: { equal: \"equal\" }, features: [ɵngcc0.ɵɵProvidersFeature([EQUAL_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], EqualValidator.prototype, \"equal\", void 0);\n\nconst gte = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v >= +value ? null : { gte: { value: value } };\n    };\n};\n\nconst GREATER_THAN_EQUAL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => GreaterThanEqualValidator),\n    multi: true\n};\nlet GreaterThanEqualValidator = class GreaterThanEqualValidator {\n    ngOnInit() {\n        this.validator = gte(this.gte);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'gte') {\n                this.validator = gte(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nGreaterThanEqualValidator.ɵfac = function GreaterThanEqualValidator_Factory(t) { return new (t || GreaterThanEqualValidator)(); };\nGreaterThanEqualValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GreaterThanEqualValidator, selectors: [[\"\", \"gte\", \"\", \"formControlName\", \"\"], [\"\", \"gte\", \"\", \"formControl\", \"\"], [\"\", \"gte\", \"\", \"ngModel\", \"\"]], inputs: { gte: \"gte\" }, features: [ɵngcc0.ɵɵProvidersFeature([GREATER_THAN_EQUAL_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], GreaterThanEqualValidator.prototype, \"gte\", void 0);\n\nconst gt = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v > +value ? null : { gt: { value: value } };\n    };\n};\n\nconst GREATER_THAN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => GreaterThanValidator),\n    multi: true\n};\nlet GreaterThanValidator = class GreaterThanValidator {\n    ngOnInit() {\n        this.validator = gt(this.gt);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'gt') {\n                this.validator = gt(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nGreaterThanValidator.ɵfac = function GreaterThanValidator_Factory(t) { return new (t || GreaterThanValidator)(); };\nGreaterThanValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GreaterThanValidator, selectors: [[\"\", \"gt\", \"\", \"formControlName\", \"\"], [\"\", \"gt\", \"\", \"formControl\", \"\"], [\"\", \"gt\", \"\", \"ngModel\", \"\"]], inputs: { gt: \"gt\" }, features: [ɵngcc0.ɵɵProvidersFeature([GREATER_THAN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], GreaterThanValidator.prototype, \"gt\", void 0);\n\nconst json = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    try {\n        const obj = JSON.parse(v);\n        if (Boolean(obj) && typeof obj === 'object') {\n            return null;\n        }\n    }\n    catch (e) { }\n    return { json: true };\n};\n\nconst JSON_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => JSONValidator),\n    multi: true\n};\nlet JSONValidator = class JSONValidator {\n    validate(c) {\n        return json(c);\n    }\n};\nJSONValidator.ɵfac = function JSONValidator_Factory(t) { return new (t || JSONValidator)(); };\nJSONValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: JSONValidator, selectors: [[\"\", \"json\", \"\", \"formControlName\", \"\"], [\"\", \"json\", \"\", \"formControl\", \"\"], [\"\", \"json\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([JSON_VALIDATOR])] });\n\nconst lte = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v <= +value ? null : { lte: { value: value } };\n    };\n};\n\nconst LESS_THAN_EQUAL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => LessThanEqualValidator),\n    multi: true\n};\nlet LessThanEqualValidator = class LessThanEqualValidator {\n    ngOnInit() {\n        this.validator = lte(this.lte);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'lte') {\n                this.validator = lte(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nLessThanEqualValidator.ɵfac = function LessThanEqualValidator_Factory(t) { return new (t || LessThanEqualValidator)(); };\nLessThanEqualValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LessThanEqualValidator, selectors: [[\"\", \"lte\", \"\", \"formControlName\", \"\"], [\"\", \"lte\", \"\", \"formControl\", \"\"], [\"\", \"lte\", \"\", \"ngModel\", \"\"]], inputs: { lte: \"lte\" }, features: [ɵngcc0.ɵɵProvidersFeature([LESS_THAN_EQUAL_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], LessThanEqualValidator.prototype, \"lte\", void 0);\n\nconst lt = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v < +value ? null : { lt: { value: value } };\n    };\n};\n\nconst LESS_THAN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => LessThanValidator),\n    multi: true\n};\nlet LessThanValidator = class LessThanValidator {\n    ngOnInit() {\n        this.validator = lt(this.lt);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'lt') {\n                this.validator = lt(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nLessThanValidator.ɵfac = function LessThanValidator_Factory(t) { return new (t || LessThanValidator)(); };\nLessThanValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LessThanValidator, selectors: [[\"\", \"lt\", \"\", \"formControlName\", \"\"], [\"\", \"lt\", \"\", \"formControl\", \"\"], [\"\", \"lt\", \"\", \"ngModel\", \"\"]], inputs: { lt: \"lt\" }, features: [ɵngcc0.ɵɵProvidersFeature([LESS_THAN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], LessThanValidator.prototype, \"lt\", void 0);\n\nconst maxDate = (maxInput) => {\n    let value;\n    let subscribe = false;\n    let maxValue = maxInput;\n    const isForm = maxInput instanceof FormControl || maxInput instanceof NgModel;\n    return (control) => {\n        if (!subscribe && isForm) {\n            subscribe = true;\n            maxInput.valueChanges.subscribe(() => {\n                control.updateValueAndValidity();\n            });\n        }\n        if (isForm) {\n            maxValue = maxInput.value;\n        }\n        value = parseDate(maxValue);\n        if (!isDate(value) && !(value instanceof Function)) {\n            if (value == null) {\n                return null;\n            }\n            else if (isForm) {\n                return { maxDate: { error: 'maxDate is invalid' } };\n            }\n            else {\n                throw Error('maxDate value must be or return a formatted date');\n            }\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const d = new Date(parseDate(control.value)).getTime();\n        if (!isDate(d)) {\n            return { value: true };\n        }\n        if (value instanceof Function) {\n            value = value();\n        }\n        return d <= new Date(value).getTime() ? null : (isForm ? { maxDate: { control: maxInput, value: maxInput.value } } : { maxDate: { value: maxValue, control: undefined } });\n    };\n};\n\nconst MAX_DATE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxDateValidator),\n    multi: true\n};\nlet MaxDateValidator = class MaxDateValidator {\n    ngOnInit() {\n        this.validator = maxDate(this.maxDate);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'maxDate') {\n                this.validator = maxDate(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nMaxDateValidator.ɵfac = function MaxDateValidator_Factory(t) { return new (t || MaxDateValidator)(); };\nMaxDateValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxDateValidator, selectors: [[\"\", \"maxDate\", \"\", \"formControlName\", \"\"], [\"\", \"maxDate\", \"\", \"formControl\", \"\"], [\"\", \"maxDate\", \"\", \"ngModel\", \"\"]], inputs: { maxDate: \"maxDate\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_DATE_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], MaxDateValidator.prototype, \"maxDate\", void 0);\n\nconst max = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v <= +value ? null : { max: { value: value } };\n    };\n};\n\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\nlet MaxValidator = class MaxValidator {\n    ngOnInit() {\n        this.validator = max(this.max);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'max') {\n                this.validator = max(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nMaxValidator.ɵfac = function MaxValidator_Factory(t) { return new (t || MaxValidator)(); };\nMaxValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxValidator, selectors: [[\"\", \"max\", \"\", \"formControlName\", \"\"], [\"\", \"max\", \"\", \"formControl\", \"\"], [\"\", \"max\", \"\", \"ngModel\", \"\"]], inputs: { max: \"max\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], MaxValidator.prototype, \"max\", void 0);\n\nconst minDate = (minInput) => {\n    let value;\n    let subscribe = false;\n    let minValue = minInput;\n    const isForm = minInput instanceof FormControl || minInput instanceof NgModel;\n    return (control) => {\n        if (!subscribe && isForm) {\n            subscribe = true;\n            minInput.valueChanges.subscribe(() => {\n                control.updateValueAndValidity();\n            });\n        }\n        if (isForm) {\n            minValue = minInput.value;\n        }\n        value = parseDate(minValue);\n        if (!isDate(value) && !(value instanceof Function)) {\n            if (value == null) {\n                return null;\n            }\n            else if (isForm) {\n                return { minDate: { error: 'minDate is invalid' } };\n            }\n            else {\n                throw Error('minDate value must be or return a formatted date');\n            }\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const d = new Date(parseDate(control.value)).getTime();\n        if (!isDate(d)) {\n            return { value: true };\n        }\n        if (value instanceof Function) {\n            value = value();\n        }\n        return d >= new Date(value).getTime() ? null : (isForm ? { minDate: { control: minInput, value: minInput.value } } : { minDate: { value: minValue, control: undefined } });\n    };\n};\n\nconst MIN_DATE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinDateValidator),\n    multi: true\n};\nlet MinDateValidator = class MinDateValidator {\n    ngOnInit() {\n        this.validator = minDate(this.minDate);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'minDate') {\n                this.validator = minDate(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nMinDateValidator.ɵfac = function MinDateValidator_Factory(t) { return new (t || MinDateValidator)(); };\nMinDateValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinDateValidator, selectors: [[\"\", \"minDate\", \"\", \"formControlName\", \"\"], [\"\", \"minDate\", \"\", \"formControl\", \"\"], [\"\", \"minDate\", \"\", \"ngModel\", \"\"]], inputs: { minDate: \"minDate\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_DATE_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], MinDateValidator.prototype, \"minDate\", void 0);\n\nconst min = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v >= +value ? null : { min: { value: value } };\n    };\n};\n\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\nlet MinValidator = class MinValidator {\n    ngOnInit() {\n        this.validator = min(this.min);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'min') {\n                this.validator = min(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nMinValidator.ɵfac = function MinValidator_Factory(t) { return new (t || MinValidator)(); };\nMinValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinValidator, selectors: [[\"\", \"min\", \"\", \"formControlName\", \"\"], [\"\", \"min\", \"\", \"formControl\", \"\"], [\"\", \"min\", \"\", \"ngModel\", \"\"]], inputs: { min: \"min\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], MinValidator.prototype, \"min\", void 0);\n\nconst notEqualTo = (notEqualControl) => {\n    let subscribe = false;\n    return (control) => {\n        if (!subscribe) {\n            subscribe = true;\n            notEqualControl.valueChanges.subscribe(() => {\n                control.updateValueAndValidity();\n            });\n        }\n        const v = control.value;\n        if (notEqualControl.value == null && v == null) {\n            return null;\n        }\n        return notEqualControl.value !== v ? null : { notEqualTo: { control: notEqualControl, value: notEqualControl.value } };\n    };\n};\n\nconst NOT_EQUAL_TO_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NotEqualToValidator),\n    multi: true\n};\nlet NotEqualToValidator = class NotEqualToValidator {\n    ngOnInit() {\n        this.validator = notEqualTo(this.notEqualTo);\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n};\nNotEqualToValidator.ɵfac = function NotEqualToValidator_Factory(t) { return new (t || NotEqualToValidator)(); };\nNotEqualToValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NotEqualToValidator, selectors: [[\"\", \"notEqualTo\", \"\", \"formControlName\", \"\"], [\"\", \"notEqualTo\", \"\", \"formControl\", \"\"], [\"\", \"notEqualTo\", \"\", \"ngModel\", \"\"]], inputs: { notEqualTo: \"notEqualTo\" }, features: [ɵngcc0.ɵɵProvidersFeature([NOT_EQUAL_TO_VALIDATOR])] });\n__decorate([\n    Input()\n], NotEqualToValidator.prototype, \"notEqualTo\", void 0);\n\nconst notEqual = (val) => {\n    return (control) => {\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = control.value;\n        return val !== v ? null : { notEqual: { value: val } };\n    };\n};\n\nconst NOT_EQUAL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NotEqualValidator),\n    multi: true\n};\nlet NotEqualValidator = class NotEqualValidator {\n    ngOnInit() {\n        this.validator = notEqual(this.notEqual);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'notEqual') {\n                this.validator = notEqual(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nNotEqualValidator.ɵfac = function NotEqualValidator_Factory(t) { return new (t || NotEqualValidator)(); };\nNotEqualValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NotEqualValidator, selectors: [[\"\", \"notEqual\", \"\", \"formControlName\", \"\"], [\"\", \"notEqual\", \"\", \"formControl\", \"\"], [\"\", \"notEqual\", \"\", \"ngModel\", \"\"]], inputs: { notEqual: \"notEqual\" }, features: [ɵngcc0.ɵɵProvidersFeature([NOT_EQUAL_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], NotEqualValidator.prototype, \"notEqual\", void 0);\n\nconst number = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    return /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(v) ? null : { 'number': true };\n};\n\nconst NUMBER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NumberValidator),\n    multi: true\n};\nlet NumberValidator = class NumberValidator {\n    validate(c) {\n        return number(c);\n    }\n};\nNumberValidator.ɵfac = function NumberValidator_Factory(t) { return new (t || NumberValidator)(); };\nNumberValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValidator, selectors: [[\"\", \"number\", \"\", \"formControlName\", \"\"], [\"\", \"number\", \"\", \"formControl\", \"\"], [\"\", \"number\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALIDATOR])] });\n\nconst property = (value) => {\n    return (control) => {\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const properties = value.split(',');\n        const obj = control.value;\n        let isValid = true;\n        for (const prop of properties) {\n            if (obj[prop] == null) {\n                isValid = false;\n                break;\n            }\n        }\n        return isValid ? null : { hasProperty: { value: value } };\n    };\n};\n\nconst PROPERTY_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PropertyValidator),\n    multi: true\n};\nlet PropertyValidator = class PropertyValidator {\n    ngOnInit() {\n        this.validator = property(this.property);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'property') {\n                this.validator = property(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nPropertyValidator.ɵfac = function PropertyValidator_Factory(t) { return new (t || PropertyValidator)(); };\nPropertyValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PropertyValidator, selectors: [[\"\", \"property\", \"\", \"formControlName\", \"\"], [\"\", \"property\", \"\", \"formControl\", \"\"], [\"\", \"property\", \"\", \"ngModel\", \"\"]], inputs: { property: \"property\" }, features: [ɵngcc0.ɵɵProvidersFeature([PROPERTY_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], PropertyValidator.prototype, \"property\", void 0);\n\nconst rangeLength = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = control.value;\n        return v.length >= value[0] && v.length <= value[1] ? null : { rangeLength: { value: value } };\n    };\n};\n\nconst RANGE_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RangeLengthValidator),\n    multi: true\n};\nlet RangeLengthValidator = class RangeLengthValidator {\n    ngOnInit() {\n        this.validator = rangeLength(this.rangeLength);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'rangeLength') {\n                this.validator = rangeLength(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nRangeLengthValidator.ɵfac = function RangeLengthValidator_Factory(t) { return new (t || RangeLengthValidator)(); };\nRangeLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeLengthValidator, selectors: [[\"\", \"rangeLength\", \"\", \"formControlName\", \"\"], [\"\", \"rangeLength\", \"\", \"formControl\", \"\"], [\"\", \"rangeLength\", \"\", \"ngModel\", \"\"]], inputs: { rangeLength: \"rangeLength\" }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], RangeLengthValidator.prototype, \"rangeLength\", void 0);\n\nconst range = (value) => {\n    return (control) => {\n        if (!isPresent(value)) {\n            return null;\n        }\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = +control.value;\n        return v >= value[0] && v <= value[1] ? null : { range: { value: value } };\n    };\n};\n\nconst RANGE_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RangeValidator),\n    multi: true\n};\nlet RangeValidator = class RangeValidator {\n    ngOnInit() {\n        this.validator = range(this.range);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'range') {\n                this.validator = range(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nRangeValidator.ɵfac = function RangeValidator_Factory(t) { return new (t || RangeValidator)(); };\nRangeValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValidator, selectors: [[\"\", \"range\", \"\", \"formControlName\", \"\"], [\"\", \"range\", \"\", \"formControl\", \"\"], [\"\", \"range\", \"\", \"ngModel\", \"\"]], inputs: { range: \"range\" }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], RangeValidator.prototype, \"range\", void 0);\n\nconst url = (control) => {\n    if (isPresent(Validators.required(control))) {\n        return null;\n    }\n    const v = control.value;\n    /* tslint:disable */\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(v) ? null : { 'url': true };\n    /* tslint:enable */\n};\n\nconst URL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => UrlValidator),\n    multi: true\n};\nlet UrlValidator = class UrlValidator {\n    validate(c) {\n        return url(c);\n    }\n};\nUrlValidator.ɵfac = function UrlValidator_Factory(t) { return new (t || UrlValidator)(); };\nUrlValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: UrlValidator, selectors: [[\"\", \"url\", \"\", \"formControlName\", \"\"], [\"\", \"url\", \"\", \"formControl\", \"\"], [\"\", \"url\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([URL_VALIDATOR])] });\n\nconst uuids = {\n    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    'all': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\nconst uuid = (version) => {\n    return (control) => {\n        if (isPresent(Validators.required(control))) {\n            return null;\n        }\n        const v = control.value;\n        const pattern = uuids[version] || uuids.all;\n        return (new RegExp(pattern)).test(v) ? null : { uuid: true };\n    };\n};\n\nconst UUID_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => UUIDValidator),\n    multi: true\n};\nlet UUIDValidator = class UUIDValidator {\n    ngOnInit() {\n        this.validator = uuid(this.uuid);\n    }\n    ngOnChanges(changes) {\n        for (const key in changes) {\n            if (key === 'uuid') {\n                this.validator = uuid(changes[key].currentValue);\n                if (this.onChange) {\n                    this.onChange();\n                }\n            }\n        }\n    }\n    validate(c) {\n        return this.validator(c);\n    }\n    registerOnValidatorChange(fn) {\n        this.onChange = fn;\n    }\n};\nUUIDValidator.ɵfac = function UUIDValidator_Factory(t) { return new (t || UUIDValidator)(); };\nUUIDValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: UUIDValidator, selectors: [[\"\", \"uuid\", \"\", \"formControlName\", \"\"], [\"\", \"uuid\", \"\", \"formControl\", \"\"], [\"\", \"uuid\", \"\", \"ngModel\", \"\"]], inputs: { uuid: \"uuid\" }, features: [ɵngcc0.ɵɵProvidersFeature([UUID_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input()\n], UUIDValidator.prototype, \"uuid\", void 0);\n\nconst CustomValidators = {\n    arrayLength,\n    base64,\n    creditCard,\n    date,\n    dateISO,\n    digits,\n    email,\n    equal,\n    equalTo,\n    gt,\n    gte,\n    json,\n    lt,\n    lte,\n    max,\n    maxDate,\n    min,\n    minDate,\n    notEqual,\n    notEqualTo,\n    number,\n    property,\n    range,\n    rangeLength,\n    url,\n    uuid\n};\nconst CustomDirectives = [\n    ArrayLengthValidator,\n    Base64Validator,\n    CreditCardValidator,\n    DateValidator,\n    DateISOValidator,\n    DigitsValidator,\n    EmailValidator,\n    EqualValidator,\n    EqualToValidator,\n    GreaterThanValidator,\n    GreaterThanEqualValidator,\n    JSONValidator,\n    LessThanValidator,\n    LessThanEqualValidator,\n    MaxValidator,\n    MaxDateValidator,\n    MinValidator,\n    MinDateValidator,\n    NotEqualValidator,\n    NotEqualToValidator,\n    NumberValidator,\n    PropertyValidator,\n    RangeValidator,\n    RangeLengthValidator,\n    UrlValidator,\n    UUIDValidator\n];\nlet CustomFormsModule = class CustomFormsModule {\n};\nCustomFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CustomFormsModule });\nCustomFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CustomFormsModule_Factory(t) { return new (t || CustomFormsModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ArrayLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[arrayLength][formControlName],[arrayLength][formControl],[arrayLength][ngModel]',\n                providers: [ARRAY_LENGTH_VALIDATOR]\n            }]\n    }], null, { arrayLength: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Base64Validator, [{\n        type: Directive,\n        args: [{\n                selector: '[base64][formControlName],[base64][formControl],[base64][ngModel]',\n                providers: [BASE64_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CreditCardValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[creditCard][formControlName],[creditCard][formControl],[creditCard][ngModel]',\n                providers: [CREDIT_CARD_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateISOValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[dateISO][formControlName],[dateISO][formControl],[dateISO][ngModel]',\n                providers: [DATE_ISO_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[date][formControlName],[date][formControl],[date][ngModel]',\n                providers: [DATE_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DigitsValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[digits][formControlName],[digits][formControl],[digits][ngModel]',\n                providers: [DIGITS_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[ngvemail][formControlName],[ngvemail][formControl],[ngvemail][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EqualToValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[equalTo][formControlName],[equalTo][formControl],[equalTo][ngModel]',\n                providers: [EQUAL_TO_VALIDATOR]\n            }]\n    }], null, { equalTo: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EqualValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[equal][formControlName],[equal][formControl],[equal][ngModel]',\n                providers: [EQUAL_VALIDATOR]\n            }]\n    }], null, { equal: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GreaterThanEqualValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[gte][formControlName],[gte][formControl],[gte][ngModel]',\n                providers: [GREATER_THAN_EQUAL_VALIDATOR]\n            }]\n    }], null, { gte: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GreaterThanValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[gt][formControlName],[gt][formControl],[gt][ngModel]',\n                providers: [GREATER_THAN_VALIDATOR]\n            }]\n    }], null, { gt: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JSONValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[json][formControlName],[json][formControl],[json][ngModel]',\n                providers: [JSON_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LessThanEqualValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[lte][formControlName],[lte][formControl],[lte][ngModel]',\n                providers: [LESS_THAN_EQUAL_VALIDATOR]\n            }]\n    }], null, { lte: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LessThanValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[lt][formControlName],[lt][formControl],[lt][ngModel]',\n                providers: [LESS_THAN_VALIDATOR]\n            }]\n    }], null, { lt: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxDateValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxDate][formControlName],[maxDate][formControl],[maxDate][ngModel]',\n                providers: [MAX_DATE_VALIDATOR]\n            }]\n    }], null, { maxDate: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n                providers: [MAX_VALIDATOR]\n            }]\n    }], null, { max: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinDateValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minDate][formControlName],[minDate][formControl],[minDate][ngModel]',\n                providers: [MIN_DATE_VALIDATOR]\n            }]\n    }], null, { minDate: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n                providers: [MIN_VALIDATOR]\n            }]\n    }], null, { min: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NotEqualToValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[notEqualTo][formControlName],[notEqualTo][formControl],[notEqualTo][ngModel]',\n                providers: [NOT_EQUAL_TO_VALIDATOR]\n            }]\n    }], null, { notEqualTo: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NotEqualValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[notEqual][formControlName],[notEqual][formControl],[notEqual][ngModel]',\n                providers: [NOT_EQUAL_VALIDATOR]\n            }]\n    }], null, { notEqual: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n                providers: [NUMBER_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PropertyValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[property][formControlName],[property][formControl],[property][ngModel]',\n                providers: [PROPERTY_VALIDATOR]\n            }]\n    }], null, { property: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[rangeLength][formControlName],[rangeLength][formControl],[rangeLength][ngModel]',\n                providers: [RANGE_LENGTH_VALIDATOR]\n            }]\n    }], null, { rangeLength: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[range][formControlName],[range][formControl],[range][ngModel]',\n                providers: [RANGE_VALIDATOR]\n            }]\n    }], null, { range: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UrlValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[url][formControlName],[url][formControl],[url][ngModel]',\n                providers: [URL_VALIDATOR]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UUIDValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[uuid][formControlName],[uuid][formControl],[uuid][ngModel]',\n                providers: [UUID_VALIDATOR]\n            }]\n    }], null, { uuid: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CustomFormsModule, { declarations: [ArrayLengthValidator,\n        Base64Validator,\n        CreditCardValidator,\n        DateValidator,\n        DateISOValidator,\n        DigitsValidator,\n        EmailValidator,\n        EqualValidator,\n        EqualToValidator,\n        GreaterThanValidator,\n        GreaterThanEqualValidator,\n        JSONValidator,\n        LessThanValidator,\n        LessThanEqualValidator,\n        MaxValidator,\n        MaxDateValidator,\n        MinValidator,\n        MinDateValidator,\n        NotEqualValidator,\n        NotEqualToValidator,\n        NumberValidator,\n        PropertyValidator,\n        RangeValidator,\n        RangeLengthValidator,\n        UrlValidator,\n        UUIDValidator], exports: [ArrayLengthValidator,\n        Base64Validator,\n        CreditCardValidator,\n        DateValidator,\n        DateISOValidator,\n        DigitsValidator,\n        EmailValidator,\n        EqualValidator,\n        EqualToValidator,\n        GreaterThanValidator,\n        GreaterThanEqualValidator,\n        JSONValidator,\n        LessThanValidator,\n        LessThanEqualValidator,\n        MaxValidator,\n        MaxDateValidator,\n        MinValidator,\n        MinDateValidator,\n        NotEqualValidator,\n        NotEqualToValidator,\n        NumberValidator,\n        PropertyValidator,\n        RangeValidator,\n        RangeLengthValidator,\n        UrlValidator,\n        UUIDValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CustomFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CustomDirectives],\n                exports: [CustomDirectives]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CustomFormsModule, CustomValidators, arrayLength as ɵa, base64 as ɵb, ArrayLengthValidator as ɵba, Base64Validator as ɵbb, CreditCardValidator as ɵbc, DateValidator as ɵbd, DateISOValidator as ɵbe, DigitsValidator as ɵbf, EmailValidator as ɵbg, EqualValidator as ɵbh, EqualToValidator as ɵbi, GreaterThanValidator as ɵbj, GreaterThanEqualValidator as ɵbk, JSONValidator as ɵbl, LessThanValidator as ɵbm, LessThanEqualValidator as ɵbn, MaxValidator as ɵbo, MaxDateValidator as ɵbp, MinValidator as ɵbq, MinDateValidator as ɵbr, NotEqualValidator as ɵbs, NotEqualToValidator as ɵbt, NumberValidator as ɵbu, PropertyValidator as ɵbv, RangeValidator as ɵbw, RangeLengthValidator as ɵbx, UrlValidator as ɵby, UUIDValidator as ɵbz, creditCard as ɵc, date as ɵd, dateISO as ɵe, digits as ɵf, email as ɵg, equal as ɵh, equalTo as ɵi, gt as ɵj, gte as ɵk, json as ɵl, lt as ɵm, lte as ɵn, max as ɵo, maxDate as ɵp, min as ɵq, minDate as ɵr, notEqual as ɵs, notEqualTo as ɵt, number as ɵu, property as ɵv, range as ɵw, rangeLength as ɵx, url as ɵy, uuid as ɵz };\n\n//# sourceMappingURL=ngx-custom-validators.js.map","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"page-wrap height-100 default-bg\">\r\n  <div class=\"app-error\">\r\n    <div class=\"fix\">\r\n      <mat-icon class=\"error-icon\" color=\"warn\">warning</mat-icon>\r\n      <div class=\"error-text\">\r\n        <h1 class=\"error-title\">500</h1>\r\n        <div class=\"error-subtitle\">Server Error!</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"error-actions\">\r\n      <button \r\n      mat-raised-button \r\n      color=\"primary\"\r\n      class=\"mb-1 mr-05\"\r\n      [routerLink]=\"['/']\">Back to Dashboard</button>\r\n      <button \r\n      mat-raised-button \r\n      color=\"warn\">Report this Problem</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  userEmail;\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  submitEmail() {\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n}\r\n","<div class=\"page-wrap height-100 black\">\r\n  <div class=\"session-form-hold\">\r\n    <mat-progress-bar mode=\"determinate\" class=\"session-progress\"></mat-progress-bar>\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <div class=\"text-center pt-8 pb-16\">\r\n          <img width=\"60px\" src=\"assets/images/logo.png\" alt=\"\" class=\"mb-05\">\r\n          <p class=\"text-muted m-0\">New password will be sent to your email address</p>\r\n        </div>\r\n        <form #fpForm=\"ngForm\" (ngSubmit)=\"submitEmail()\">\r\n\r\n          <div class=\"\">\r\n            <mat-form-field class=\"full-width\">\r\n              <input\r\n                matInput\r\n                name=\"email\"\r\n                required\r\n                [(ngModel)]=\"userEmail\"\r\n                #email=\"ngModel\"\r\n                placeholder=\"Email\"\r\n                value=\"\">\r\n            </mat-form-field>\r\n            <small \r\n              *ngIf=\"email.errors && (email.dirty || email.touched) && (email?.errors?.required)\" \r\n              class=\"form-error-msg\"> Email is required </small>\r\n          </div>\r\n\r\n          <button mat-raised-button class=\"mat-primary full-width mb-1\" [disabled]=\"fpForm.invalid\">Submit</button>\r\n          <div class=\"text-center\">\r\n            <a [routerLink]=\"'/sessions/signin'\" class=\"mat-primary text-center full-width\">Sign in</a>\r\n            <span fxFlex></span>\r\n            <a [routerLink]=\"'/sessions/signup'\" class=\"mat-primary text-center full-width\">Create a new account</a>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatProgressBar } from '@angular/material/progress-bar';\r\n\r\n@Component({\r\n  selector: 'app-lockscreen',\r\n  templateUrl: './lockscreen.component.html',\r\n  styleUrls: ['./lockscreen.component.css']\r\n})\r\nexport class LockscreenComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  lockscreenData = {\r\n    password: ''\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  unlock() {\r\n    console.log(this.lockscreenData);\r\n\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n}\r\n","<div class=\"page-wrap height-100 black\">\r\n  <div class=\"session-form-hold session-lockscreen\">\r\n    <mat-progress-bar mode=\"determinate\" class=\"session-progress\"></mat-progress-bar>\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <div fxFlex=\"column\" fxFlexWrap=\"wrap\">\r\n          <div fxFlexWrap=\"wrap\" class=\"lockscreen-user\">\r\n            <img class=\"lockscreen-face\" src=\"assets/images/face-3.jpg\" alt=\"\">\r\n            <h5 class=\"m-0 font-normal\">John Doe</h5>\r\n            <small class=\"text-muted\">Last seen 1 hour ago</small>\r\n          </div>\r\n          <form #lockscreenForm=\"ngForm\" (ngSubmit)=\"unlock()\">\r\n            <div class=\"\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input \r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  required\r\n                  matInput\r\n                  [(ngModel)]=\"lockscreenData.password\"\r\n                  #password=\"ngModel\"\r\n                  placeholder=\"Password\">\r\n              </mat-form-field>\r\n              <small \r\n                *ngIf=\"password.errors && (password.dirty || password.touched) && (password?.errors?.required)\" \r\n                class=\"form-error-msg\"> Password is required </small>\r\n            </div>\r\n            \r\n            <button mat-raised-button class=\"mat-primary full-width mb-05\" [disabled]=\"lockscreenForm.invalid\">Unlock</button>\r\n            <button mat-raised-button [routerLink]=\"'/sessions/signin'\" color=\"accent\" class=\"mat-primary full-width\">It's not me!</button>\r\n          </form>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"page-wrap height-100 default-bg\">\r\n  <div class=\"app-error\">\r\n    <div class=\"fix\">\r\n      <mat-icon class=\"error-icon\" color=\"warn\">error</mat-icon>\r\n      <div class=\"error-text\">\r\n        <h1 class=\"error-title\">404</h1>\r\n        <div class=\"error-subtitle\">Page Not Found!</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"error-actions\">\r\n      <button \r\n      mat-raised-button \r\n      color=\"primary\"\r\n      class=\"mb-1 mr-05\"\r\n      [routerLink]=\"['/']\">Back to Dashboard</button>\r\n      \r\n      <button \r\n      mat-raised-button \r\n      color=\"warn\">Report this Problem</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { PerfectScrollbarModule } from \"ngx-perfect-scrollbar\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SharedMaterialModule } from \"app/shared/shared-material.module\";\r\n\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { SharedComponentsModule } from 'app/shared/components/shared-components.module';\r\n\r\n// import { CommonDirectivesModule } from './sdirectives/common/common-directives.module';\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { LockscreenComponent } from \"./lockscreen/lockscreen.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { SessionsRoutes } from \"./sessions.routing\";\r\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\r\nimport { ErrorComponent } from \"./error/error.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n  CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedMaterialModule,\r\n    SharedComponentsModule,\r\n    FlexLayoutModule,\r\n    PerfectScrollbarModule,\r\n    RouterModule.forChild(SessionsRoutes),\r\n  ],\r\n  declarations: [\r\n    ForgotPasswordComponent,\r\n    LockscreenComponent,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    NotFoundComponent,\r\n    ErrorComponent\r\n  ],\r\n})\r\nexport class SessionsModule {}\r\n","import { Routes } from \"@angular/router\";\r\n\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { LockscreenComponent } from \"./lockscreen/lockscreen.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\r\nimport { ErrorComponent } from \"./error/error.component\";\r\n\r\n\r\nexport const SessionsRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"signup\",\r\n        component: SignupComponent,\r\n        data: { title: \"Signup\" },\r\n      },\r\n      {\r\n        path: \"signin\",\r\n        component: SigninComponent,\r\n        data: { title: \"Signin\" },\r\n      },\r\n      {\r\n        path: \"forgot-password\",\r\n        component: ForgotPasswordComponent,\r\n        data: { title: \"Forgot password\" },\r\n      },\r\n      {\r\n        path: \"lockscreen\",\r\n        component: LockscreenComponent,\r\n        data: { title: \"Lockscreen\" },\r\n      },\r\n      {\r\n        path: \"404\",\r\n        component: NotFoundComponent,\r\n        data: { title: \"Not Found\" },\r\n      },\r\n      {\r\n        path: \"error\",\r\n        component: ErrorComponent,\r\n        data: { title: \"Error\" },\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { matxAnimations } from \"app/shared/animations/matx-animations\";\r\nimport { JwtAuthService } from \"app/shared/services/auth/jwt-auth.service\";\r\nimport { AppLoaderService } from \"app/shared/services/app-loader/app-loader.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n  animations: matxAnimations\r\n})\r\nexport class SigninComponent implements OnInit, AfterViewInit {\r\n  signinForm: FormGroup;\r\n  errorMsg = '';\r\n  return: string;\r\n  loading: Boolean;\r\n\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  constructor(\r\n    private jwtAuth: JwtAuthService,\r\n    private matxLoader: AppLoaderService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signinForm = new FormGroup({\r\n      username: new FormControl('Watson', Validators.required),\r\n      password: new FormControl('12345678', Validators.required),\r\n      rememberMe: new FormControl(true)\r\n    });\r\n\r\n    this.route.queryParams\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(params => this.return = params['return'] || '/');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // setTimeout(() => {\r\n      this.autoSignIn();\r\n    // })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  signin() {\r\n    const signinData = this.signinForm.value\r\n    this.loading = true;\r\n    this.jwtAuth.signin(signinData.username, signinData.password)\r\n    .subscribe(response => {\r\n      this.loading = false;\r\n      this.router.navigateByUrl(this.return);\r\n    }, err => {\r\n      this.loading = false;\r\n      this.errorMsg = err.message;\r\n    })\r\n  }\r\n\r\n  autoSignIn() {    \r\n    if(this.return === '/') {\r\n      return\r\n    }\r\n    this.matxLoader.open(`Automatically Signing you in! \\n Return url: ${this.return.substring(0, 20)}...`, {width: '320px'});\r\n    setTimeout(() => {\r\n      this.signin();\r\n      console.log('autoSignIn');\r\n      this.matxLoader.close()\r\n    }, 2000);\r\n  }\r\n}\r\n","<div\r\n  [perfectScrollbar]=\"{}\"\r\n  class=\"height-100vh signup4-wrap\"\r\n  fxLayout=\"row wrap\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <div\r\n    class=\"signup4-container mat-elevation-z4 white\"\r\n    fxLayout=\"row wrap\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutAlign=\"start stretch\"\r\n    fxFlex=\"60\"\r\n    fxFlex.xs=\"94\"\r\n    fxFlex.sm=\"80\"\r\n    [@animate]=\"{\r\n      value: '*',\r\n      params: { y: '40px', opacity: '0', delay: '100ms', duration: '400ms' }\r\n    }\"\r\n  >\r\n    <!-- Left Side content -->\r\n    <div\r\n      fxLayout=\"column\"\r\n      fxLayoutAlign=\"center center\"\r\n      class=\"signup4-header\"\r\n      fxFlex=\"40\"\r\n    >\r\n      <div class=\"\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n        <img\r\n          width=\"200px\"\r\n          src=\"assets/images/illustrations/lighthouse.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Right side content -->\r\n    <div fxFlex=\"60\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n      <form\r\n        [formGroup]=\"signinForm\"\r\n        class=\"signup4-form grey-100\"\r\n        (ngSubmit)=\"signin()\"\r\n      >\r\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"********\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-checkbox formControlName=\"rememberMe\"\r\n          >Remember this computer</mat-checkbox\r\n        >\r\n\r\n        <div\r\n          fxLayout=\"row wrap\"\r\n          fxLayoutAlign=\"start center\"\r\n          style=\"margin-top: 20px;\"\r\n        >\r\n          <button-loading [loading]=\"loading\" loadingText=\"Signing in...\" class=\"mr-16\" color=\"primary\"\r\n            >Sign in</button-loading\r\n          >\r\n          <span class=\"px-16\">or</span>\r\n          <a\r\n            class=\"font-weight-bold mat-color-primary\"\r\n            routerLink=\"/sessions/signup\"\r\n            >Sign Up</a\r\n          >\r\n        </div>\r\n\r\n        <!-- <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" style=\"margin-top: 20px\">\r\n          <span>or connect with </span>\r\n          <div>\r\n            icons goes here\r\n          </div>\r\n        </div> -->\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  Validators,\r\n  FormControl,\r\n  FormBuilder,\r\n  FormGroup\r\n} from \"@angular/forms\";\r\nimport { CustomValidators } from \"ngx-custom-validators\";\r\nimport { matxAnimations } from \"app/shared/animations/matx-animations\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n  animations: matxAnimations\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    const password = new FormControl(\"\", Validators.required);\r\n    const confirmPassword = new FormControl(\r\n      \"\",\r\n      CustomValidators.equalTo(password)\r\n    );\r\n\r\n    this.signupForm = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: password,\r\n      agreed: [false, Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (!this.signupForm.invalid) {\r\n      // do what you wnat with your data\r\n      console.log(this.signupForm.value);\r\n    }\r\n  }\r\n}\r\n","<div\r\n  [perfectScrollbar]=\"{}\"\r\n  class=\"height-100vh signup4-wrap\"\r\n  fxLayout=\"row wrap\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <div\r\n    class=\"signup4-container mat-elevation-z4\"\r\n    fxLayout=\"row wrap\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutAlign=\"start stretch\"\r\n    fxFlex=\"60\"\r\n    fxFlex.xs=\"94\"\r\n    fxFlex.sm=\"80\"\r\n    [@animate]=\"{value:'*',params:{y:'120px',opacity:'0',delay:'100ms', duration: '400ms'}}\"\r\n  >\r\n\r\n  <!-- Left Side content -->\r\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" \r\n  class=\"signup4-header grey-200\" fxFlex=\"40\">\r\n\r\n    <div class=\"\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n        <img width=\"200px\" src=\"assets/images/illustrations/posting_photo.svg\" alt=\"\">\r\n    </div>\r\n\r\n  </div>\r\n\r\n    <!-- Right side content -->\r\n   <div fxFlex=\"60\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n    <form  [formGroup]=\"signupForm\" class=\"signup4-form white\" (ngSubmit)=\"onSubmit()\">\r\n        \r\n      <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-label>Username</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"********\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-checkbox formControlName=\"agreed\"\r\n        >I agree with terms and condtions</mat-checkbox\r\n      >\r\n      \r\n      <div fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" style=\"margin-top: 20px;\">\r\n        <button mat-flat-button color=\"primary\">Sign Up</button>\r\n        <span style=\"padding: 0px 8px 0px 16px;\">or</span>\r\n        <a class=\"font-weight-bold mat-color-primary\" routerLink=\"/sessions/signin\">Sign In</a>\r\n      </div>\r\n\r\n      <!-- <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" style=\"margin-top: 20px\">\r\n          <span>or connect with </span>\r\n          <div>\r\n            icons goes here\r\n          </div>\r\n        </div> -->\r\n\r\n    </form>\r\n   </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}